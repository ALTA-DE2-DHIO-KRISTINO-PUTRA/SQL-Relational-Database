RELEASE 1:

1) Insert
    1.a) Insert 3 product type. insert into product (nama,harga,stok)values 
('laptop','1250.9','100'),
('smartphone','500.10','200'),
('mouse','350.34','50')

    1.b) Insert 2 product dengan product type id = 1 insert into product(nama,harga,stok,product_type) 
values ('laptop','1250.9','100','1'),
('smartphone','500.10','200','1')

    1.c) Insert 3 product dengan product type id = 2 insert into product(nama,harga,stok,product_type) 
values ('laptop','1250.9','100','2'),
('smartphone','500.10','200','2'),
('mouse','350.34','50','2');

    1.d) Insert 3 product dengan product type id = 3 insert into product(nama,harga,stok,product_type) 
values ('laptop','1250.9','100','2'),
('smartphone','500.10','200','2'),
('mouse','350.34','50','2');

    1.e) Insert product description pada setiap product. alter table product
add column product_description text;

    1.f) Insert 3 payment methods. alter table product
add column payment_method varchar(255);
insert into product(nama,harga,stok,product_type,payment_method) 
values ('laptop','1250.9','100','1','credit'),
('smartphone','500.10','200','1','cash'),
('mouse','350.34','50','3','e-wallet');

    1.g) Insert 5 user pada tabel user. insert into users(user_id,username,email,password)
values ('user1','ridwan','ridwan@gmail.com','ridwan123'),
('user2','kamil','kamil@gmail.com','kamil123'),
('user3','joko','joko@gmail.com','joko123'),
('user4','widodo','widodo@gmail.com','widodo123'),
('user5','prabowo','prabowo@gmail.com','prabowo123');


    1.h) Insert 3 transaksi di masing-masing user (min 3 user). (soal berlanjut ke soal 1.j)
    create table transactions(
	transaction_id integer,
	tanggal date,
	jumlah numeric,
	primary key(transaction_id)
	);
alter table users
add column transaction_id varchar(255);
insert into users(user_id,username,email,password,transaction_id)
values ('user1','ridwan','ridwan@gmail.com','ridwan123','1'),
('user2','kamil','kamil@gmail.com','kamil123','2'),
('user3','joko','joko@gmail.com','joko123','3');

    1.i) Insert 3 product di masing-masing transaksi.alter table transaction
add column product varchar(255);
insert into transaction (transaction_id,tanggal,jumlah,product)
values('1','12-12-2023','100','laptop'),
('2','13-12-2023','150','smartphone'),
('3','14-12-2023','50','mouse'),

2) Select
    2.a) Tampilkan nama user / pelanggan dengan gender Laki-laki / M. select username
from users
where gender='laki-laki' or gender='m';

    2.b) Tampilkan product dengan id = 3. select*from product
where product_type='3';

    2.c) Tampilkan data pelanggan yang created_at dalam range 7 hari kebelakang dan mempunyai nama mengandung kata ‘a’.
    select*from customers
where created_at >= CURRENT_DATE - INTERVAL 7 DAY
  and created_at <= CURRENT_DATE
  and lower(customer_name) LIKE '%a%';

    2.d) Hitung jumlah user / pelanggan dengan status gender Perempuan.
    SELECT COUNT(*) AS total_perempuan
FROM users
WHERE gender = 'Perempuan';
select*from users
order by username='perempuan';


    2.e) Tampilkan data pelanggan dengan urutan sesuai nama abjad
    SELECT*FROM users
ORDER BY user_name ASC;

    2.f) Tampilkan 5 data transaksi dengan product id = 3
    SELECT*FROM transactions
WHERE product_type = 3
ORDER BY transaction_id DESC
LIMIT 5;

3. Update
    3.a) Ubah data product id 1 dengan nama ‘product dummy’.
    UPDATE products
set name = 'dummy'
where product_type = 1;



    3.b) Update qty = 3 pada transaction detail dengan product id 1.
    UPDATE transaction_detail
SET quantity = 3
WHERE transaction_id = 1;


4. Delete
    4.a) Delete data pada tabel product dengan id 1. 
    delete from product
where product_type= '1';


    4.b) Delete pada tabel product dengan product-type id 1.
    delete from product
where product_type= '1';


RELEASE 2: Join, Union, Sub-query, Function

1. Gabungkan data transaksi dari user id 1 dan user id 2.
select*from transaction
where user_id = 1
union all
select*from transaction
where user_id = 2

2. Tampilkan jumlah harga transaksi user id 1.
select user_id,sum(harga)as total_harga
from transaction
where user_id = 1
group by user_id;

3. Tampilkan total transaksi dengan product type 2.
select count as total_transaction
from transaction
where product_type = 2


4. Tampilkan semua field table product dan field name table product type yang saling berhubungan.

select*from product
join product_type on product.product_type_id
= product_type.product_type_id;

5. Tampilkan semua field table transaction, field name table product dan field name table user.
select*from transaction
join product on transaction.product_id = product.product_id
join user on transaction.user_id = user.user_id

6. Tampilkan data products yang tidak pernah ada di tabel transaction_details dengan sub-query.
select*from product
where product.product_id NOT IN (
	select product_id
	from transaction_details
	);